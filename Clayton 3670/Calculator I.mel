global proc float Addition (float $numbers[])
{
	float $sum = $numbers[0];

	for ($i=1; $i<size($numbers); $i++)
	{
		$sum += $numbers[$i];
	}

	return $sum;

}


global proc float Subtraction (float $numbers[])
{
	float $difference = $numbers[0];

	for ($i=1; $i<size($numbers); $i++)
	{
		$difference -= $numbers[$i];
	}

	return $difference;

}

global proc float Multiplication (float $numbers[])
{
	float $result = $numbers[0];

	for ($i=1; $i<size($numbers); $i++)
	{
		$result *= $numbers[$i];
	}

	return $result;

}

global proc float Division (float $numbers[])
{
	float $result = $numbers[0];

	for ($i=1; $i<size($numbers); $i++)
	{
		$result /= $numbers[$i];
	}

	return $result;

}

global proc float Power (float $x, float $n)
{
	float $result = x;

	for ($i=0; $i<n; $i++)
	{
		$result *= x
	}

	return $result;

}


global proc float Median (float $numbers[])
{
	float $sorted = `sort $numbers`;
	float $midpoint = size($numbers)%2;
	return $sorted[$midpoint];
}

global proc float Mode (float $numbers[])
{
	if $numbers[] == []:
		return $numbers;

	float $sorted[] = `sort $numbers`; //sort array
	float $first = 0; //first index begins
	for ($i=0; $i<size($sorted); $i++) //run thru sorted list
	{	
		float $values[] += $sorted[$first]; //add first value
		float $freq[] += 1 //start first freq

		$next = $first + 1; //next will be iteration of first

		if $sorted[$next] != $sorted[$first]:
			float $values[] += $sorted[$next]; //but num into array
			float $freq += 1; //add new freq into freq array
		else:
			float $freq += `$freq[$first] + 1`; //if numbers are the same, we will add to the current frequent by 1

		$first = $next; //loop to new spot
	}

}

global proc float Mean (float $numbers[])
{
	float $total = Addition($numbers);
	float $mean = $total/size($numbers);
	return $mean;
}







