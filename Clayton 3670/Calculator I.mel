global proc float Addition (float $numbers[])
{
	float $sum = $numbers[0];

	for ($i=1; $i<size($numbers); $i++)
	{
		$sum += $numbers[$i];
	}

	return $sum;

}


global proc float Subtraction (float $numbers[])
{
	float $difference = $numbers[0];

	for ($i=1; $i<size($numbers); $i++)
	{
		$difference -= $numbers[$i];
	}

	return $difference;

}


global proc float Multiplication (float $numbers[])
{
	float $result = $numbers[0];

	for ($i=1; $i<size($numbers); $i++)
	{
		$result *= $numbers[$i];
	}

	return $result;

}


global proc float Division (float $numbers[])
{
	float $result = $numbers[0];

	for ($i=1; $i<size($numbers); $i++)
	{
		$result /= $numbers[$i];
	}

	return $result;

}


global proc float Power (float $x, float $n)
{
	float $result = $x;

	for ($i=1; $i<$n; $i++)
	{
		$result *= $x;
	}

	return $result;

}


global proc float Median (float $numbers[])
{
    float $midpoint;
    float $midpointOne;
    float $midpointTwo;
    float $median;
	$sorted = `sort $numbers`;
	$sizeNum= `size($numbers)`;
    $checkNum= $sizeNum%2;
	if ($checkNum == 1) { //check if num is odd
        int $midpoint = (($sizeNum/2.0) + 0.5); //divide by 2 and round decimal up by adding 0.5.
        $median = $sorted[$midpoint];
	} else {
	    int $midpointTwo = ($sizeNum/2.0); //second midpoint
	    int $midpointOne = $midpointTwo - 1; //first midpoint
	    $median = (($sorted[$midpointOne]+$sorted[$midpointTwo])/2);
	}
	return $median;
}
Median({3,4,1,5})


global proc float Mode (float $numbers[])
{
	//if $numbers[] == []:
	    //return $numbers;

	float $sorted[] = `sort $numbers`; //sort array
	float $first = 0; //first index begins
	for ($i=0; $i<size($sorted); $i++) //run thru sorted list
	{	
		float $values[] += $sorted[$first]; //add first value
		float $freq[] += 1 //start first freq

		$next = $first + 1; //next will be iteration of first

		if $sorted[$next] != $sorted[$first]:
			float $values[] += $sorted[$next]; //put num into array
			float $freq += 1; //add new freq into freq array
		else:
			float $freq += `$freq[$first] + 1`; //if numbers are the same, we will add to the current freq by 1

		$first = $next; //loop to new spot
	}


}
Mode ({3,4,1,5,4})

float $numbers[] = {3,4,1,5,4};

int $sorted[] = `sort $numbers`; //sort array
int $first = 0; //first index begins
int $values[];
for ($i=0; $i<size($sorted); $i++) //run thru sorted list
{	
    $values += $sorted[$first]; //add first value

}

global proc float Mean (float $numbers[])
{
	float $sum = $numbers[0];

	for ($i=1; $i<size($numbers); $i++)
	{
		$sum += $numbers[$i];
	}

	float $mean = $sum/size($numbers);
	return $mean;
}
Mean ({3,4,1,5,4})

/* Python
def Mode(arr):
    if arr == []:
        return arr
    else:
        arr.sort()
        first = 0 //first index begins
        for 

        return print(arr)

Mode([3,4,1,5,4])
*/






